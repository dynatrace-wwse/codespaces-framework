{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"1. Introduction","text":"<p>This codespace is powered by the Dynatrace Enablement Framework, this means that this codespace:</p> <ul> <li>can run in github codespaces, as a remote container or locally as docker container</li> <li>is crosscompiled for AMD and ARM architectures</li> <li>follows a set of standards and best practices for enhancing the user experience</li> </ul> <p>Want to learn more about it? We invite you to read this documentation</p> <p> </p>"},{"location":"#project-goals","title":"Project Goals","text":"The goal of this effort <p>Reduce complexity, remove friction and increase adoption of the Dynatrace Platform</p> <p>The Dynatrace Enablement Framework is a structured set of tooling and best practices designed to streamline how we deliver, maintain, and scale solutions across the Dynatrace Platform. Its core purpose is to increase platform adoption by ensuring consistent training delivery, comprehensive solution coverage, and operational efficiency.Trainings within the framework are built as GitHub Codespaces\u2014they\u2019re publicly accessible, run seamlessly across environments, and adhere to a defined set of standards to ensure quality, repeatability, and alignment across teams.</p>"},{"location":"#dynatrace-enablement-framework-in-a-nutshell","title":"Dynatrace Enablement Framework in a Nutshell","text":"<p>The Dynatrace Enablement Framework streamlines the delivery of demos and hands-on trainings for the Dynatrace Platform. It provides a unified set of tools, templates, and best practices to ensure trainings are easy to create, run anywhere, and maintain over time.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li> <p>GitHub-Hosted &amp; Versioned   All trainings are managed in GitHub repositories, ensuring traceability and collaboration.</p> </li> <li> <p>Self-Service Documentation   Each repo includes its own MkDocs-powered documentation, published via GitHub Pages.</p> </li> <li> <p>Universal Base Image   A Docker image supports AMD/ARM architectures, GitHub Codespaces, VS Code Dev Containers, and local execution in Ubuntu OS.</p> </li> <li> <p>Separation of Concerns   Modular design allows repo-specific logic without impacting the core framework.</p> </li> <li> <p>Automated Testing   GitHub Actions enable end-to-end integration tests for all trainings.</p> </li> <li> <p>Monitoring &amp; Analytics   Usage and adoption are tracked with Dynatrace for continuous improvement.</p> </li> <li> <p>Rapid Training Creation   Templates and automation help trainers launch new enablement content quickly.</p> </li> <li> <p>Centralised Maintenance   The Codespaces Synchronizer tool keeps all repositories up to date with the latest framework changes.</p> </li> </ul>"},{"location":"#benefits","title":"Benefits","text":"<ul> <li>Reduces complexity and friction for trainers and learners  </li> <li>Increases adoption and consistency  </li> <li>Scales across internal, partner, and customer enablement</li> </ul> <p>What will we do</p> <p>In this tutorial we will learn how easy it is to create an enablement using codespaces and a Kubernetes cluster!</p>"},{"location":"#support-policy","title":"Support Policy","text":"<p>Support Policy</p> <p>This is an enablement project created by the Center of Excellence - Enablement Team at Dynatrace.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p> <ul> <li>Yes! let's begin </li> </ul>"},{"location":"cleanup/","title":"Cleanup","text":"<p>Deleting the codespace from inside the container</p> <p>We like to make your life easier, for convenience there is a function loaded in the shell of the Codespace for deleting the codespace, just type <code>deleteCodespace</code>. This will trigger the deletion of the codespace.</p> <p>Another way to do this is by going to https://github.com/codespaces and delete the codespace.</p> <p>You may also want to deactivate or delete the API token needed for this lab.</p> <ul> <li>Ressources</li> </ul>"},{"location":"container-image/","title":"2. Container image","text":""},{"location":"container-image/#overview","title":"Overview","text":"<p>The Dynatrace Enablement Framework uses a custom Docker image as the foundation for all training and demo environments. This image is designed for maximum compatibility, flexibility, and ease of use across different platforms and deployment scenarios.</p>"},{"location":"container-image/#key-features","title":"Key Features","text":""},{"location":"container-image/#base-image","title":"\ud83d\uddbc\ufe0f Base Image:","text":"<p>The framework uses <code>mcr.microsoft.com/devcontainers/base:ubuntu</code> as its base image, ensuring seamless compatibility with GitHub Codespaces and Visual Studio Code Dev Containers.</p>"},{"location":"container-image/#cross-platform-support","title":"\ud83d\udcbb Cross-Platform Support:","text":"<p>The image is built to run on both AMD and ARM architectures, eliminating vendor lock-in and enabling use on a wide range of hardware.</p>"},{"location":"container-image/#local-and-cloud-execution","title":"\u2601\ufe0f Local and Cloud Execution:","text":"<ul> <li>Can be run in GitHub Codespaces for cloud-based development.</li> <li>Supports local execution on Windows, Linux, and macOS via Multipass, providing a consistent development environment regardless of the host OS.</li> </ul>"},{"location":"container-image/#dynatrace-integration","title":"Dynatrace Integration:","text":"<p>Dynatrace OneAgent FullStack and Kubernetes CloudNativeFullstack deployments work seamlessly with this deployment. All necessary components such as the CSI Driver, Webhook, ActiveGate, and OneAgents can be deployed in this image ensuring seamless monitoring and observability of the running applications.</p>"},{"location":"container-image/#tooling","title":"Tooling","text":"<p>\ud83d\udee0\ufe0f Included tooling </p> <p>The image comes with a comprehensive set of tools required for modern DevOps and cloud-native development, including:</p> <ul> <li>Helm</li> <li>Kubectl</li> <li>Kind</li> <li>Docker</li> <li>NodeJs</li> <li>K9s</li> <li>Python</li> </ul>"},{"location":"container-image/#docker-in-socket-strategy","title":"Docker-in-Socket Strategy","text":"<p>The Dynatrace Enablement Framework uses a Docker-in-Socket strategy to enable container management from within the development container. This approach allows the container to communicate directly with the Docker daemon running on the host machine by mounting the Docker socket (<code>/var/run/docker.sock</code>) into the container.</p>"},{"location":"container-image/#how-it-works","title":"How It Works","text":"<ul> <li>The <code>entrypoint.sh</code> script inside the container handles the logic for interacting with the Docker daemon.</li> <li>By sharing the Docker socket, the container can run Docker commands as if it were running directly on the host.</li> <li>This enables workflows such as building, running, and managing additional containers from within your Codespace or Dev Container.</li> </ul>"},{"location":"container-image/#benefits","title":"Benefits","text":"<ul> <li>Consistency: Ensures that Docker commands behave the same way inside the container as they do on the host.</li> <li>Flexibility: Supports advanced scenarios like running nested containers or orchestrating multi-container setups.</li> <li>Simplicity: No need to install Docker separately inside the container; it leverages the host\u2019s Docker installation.</li> </ul>"},{"location":"container-image/#example","title":"Example","text":"<p>In the <code>devcontainer.json</code>, the Docker socket is typically mounted like this:</p> <pre><code>  \"mounts\": [\"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind\"],\n</code></pre>"},{"location":"container-image/#special-container-runtime-arguments","title":"Special Container Runtime Arguments","text":"<p>The following <code>runArgs</code> configuration is used in the <code>devcontainer.json</code> file to enhance the capabilities of the development container:</p> <pre><code>\"runArgs\": [\"--init\", \"--privileged\", \"--network=host\"]\n</code></pre> <ul> <li>--init: Runs an init process inside the container to handle reaping zombie processes and signal forwarding, improving container stability.</li> <li>--privileged: Grants the container extended privileges, allowing it to access all devices on the host and perform operations typically restricted in standard containers. This is useful for scenarios that require low-level system access (e.g., running Docker inside Docker or accessing host resources).</li> <li>--network=host: Shares the host\u2019s networking stack with the container, enabling the container to use the host\u2019s network interfaces directly. This is helpful for networking tests or when services inside the container need to be accessible on the host network.</li> </ul>"},{"location":"container-image/#image-distribution","title":"Image Distribution","text":"<p>The image is hosted on Docker Hub and is crosscompiled for ARM and AMD architectures. </p>"},{"location":"container-image/#using-the-image-in-devcontainerjson","title":"Using the Image in devcontainer.json","text":"<p>The way you configure your development container depends on whether you want to use the pre-built image or build it yourself from a Dockerfile.</p>"},{"location":"container-image/#using-the-pre-built-image","title":"Using the Pre-built Image","text":"<p>To use the pre-built image, specify the \"image\" property in your devcontainer.json file:</p> <p><pre><code>  // Pulling the image from the Dockerhub, runs on AMD64 and ARM64. Pulling is normally faster.\n  \"image\":\"shinojosa/dt-enablement:v1.1\",\n</code></pre> This will pull the published image from Docker Hub and use it as the base for your Codespace or Dev Container.</p>"},{"location":"container-image/#building-the-image-with-vs-code","title":"Building the Image with VS Code","text":"<p>If you want to build the image yourself (for example, to customise it), you need to use the \"build\" section in your devcontainer.json. Uncomment or add the following: <pre><code>  // \"image\": \"shinojosa/dt-enablement\",  \n  \"build\": {    \n    \"dockerfile\": \"Dockerfile\"  }\n    },\n</code></pre></p> <p>Comment out or remove the \"image\" line. Uncomment or add the \"build\" section, pointing to your Dockerfile. This will instruct the environment to build the image locally using your Dockerfile.</p>"},{"location":"container-image/#cross-compiling-with-buildx","title":"Cross-Compiling with Buildx","text":"<p>In the <code>.devcontainer</code> folder, there is a <code>Makefile</code> that includes a <code>buildx</code> target specifically designed for cross-compiling the container image.</p> <p>To use cross-compilation:</p> <ul> <li>Make sure your host architecture is ARM.</li> <li>Run the <code>buildx</code> target from the <code>Makefile</code> to build the image for multiple architectures.</li> </ul> <p>Example usage:</p>"},{"location":"container-image/#make-buildx","title":"<pre><code>make buildx\n</code></pre>","text":"<ul> <li>Let's continue</li> </ul>"},{"location":"draft/","title":"Draft","text":"<p>Requirements</p> <ul> <li>A Grail enabled Dynatrace SaaS Tenant (sign up here).</li> <li>A GitHub account to interact with the demo repository.</li> </ul> <p>This section is a WIP</p> <p>This section is a WIP</p> <p></p> <p>This section is a WIP</p> <p>This section is a WIP</p> <ul> <li>Let's start our enablement</li> </ul> <ul> <li>Let's launch Codespaces </li> </ul>"},{"location":"framework/","title":"5. The Framework","text":""},{"location":"framework/#5-the-framework","title":"5. The Framework","text":"<p>This section is a WIP</p> <p>This section is a WIP</p> <ul> <li>Let's continue</li> </ul>"},{"location":"instantiation-types/","title":"3. Instantiation types","text":""},{"location":"instantiation-types/#3-instantiation-types","title":"3. Instantiation types","text":"<p>This section is a WIP</p> <p>This section is a WIP</p> <ul> <li>Let's continue</li> </ul>"},{"location":"monitoring/","title":"9. Monitoring","text":""},{"location":"monitoring/#9-monitoring","title":"9. Monitoring","text":"<p>This section is a WIP</p> <p>This section is a WIP</p> <ul> <li>Let's continue</li> </ul>"},{"location":"resources/","title":"10. Resources","text":""},{"location":"resources/#get-your-dynatrace-environment","title":"Get your Dynatrace environment","text":"<ul> <li>Create a Free Trial in Dynatrace</li> </ul>"},{"location":"resources/#documentation","title":"Documentation","text":"<ul> <li>Dynatrace documentation</li> </ul>"},{"location":"resources/#dynatrace-news","title":"Dynatrace news","text":"<ul> <li>Dynatrace Blog</li> </ul> <ul> <li>What's Next? </li> </ul>"},{"location":"synchronizer/","title":"7. Synchronizer","text":""},{"location":"synchronizer/#7-synchronizer","title":"7. Synchronizer","text":"<p>This section is a WIP</p> <p>This section is a WIP</p> <ul> <li>Let's continue</li> </ul>"},{"location":"template/","title":"4. Codespaces Template","text":""},{"location":"template/#4-codespaces-template","title":"4. Codespaces Template","text":"<p>This section is a WIP</p> <p>This section is a WIP</p> <ul> <li>Let's continue</li> </ul>"},{"location":"testing/","title":"8. Testing","text":""},{"location":"testing/#8-testing","title":"8. Testing","text":"<p>This section is a WIP</p> <p>This section is a WIP</p> <ul> <li>Let's continue</li> </ul>"},{"location":"user-experience/","title":"6. User Experience","text":""},{"location":"user-experience/#6-user-experience","title":"6. User Experience","text":"<p>This section is a WIP</p> <p>This section is a WIP</p> <ul> <li>Let's continue</li> </ul>"},{"location":"whats-next/","title":"11. What's next?","text":"<p>More to come</p> <ul> <li>Stay tuned, more enablements are coming whith more advanced usecases...</li> </ul>"},{"location":"snippets/admonitions/","title":"Admonitions","text":"<p>Note</p> <p>This is a Note </p> <p>Abstract</p> <p>This is an abstract</p> <p>Tipp</p> <p>This is a tipp </p> <p>Success</p> <p>This is a success </p> <p>Question</p> <p>This is a success </p> <p>Failure</p> <p>This is a failure </p> <p>Danger</p> <p>This is a danger </p> <p>Info</p> <p>This is a info</p> <p>Warning</p> <p>This is a Warning </p> <p>This is an Example admonition</p> <p>This is an example</p> This is a bug and is collapsable <p>This is a bug</p>"},{"location":"snippets/disclaimer/","title":"Disclaimer","text":"<p>Support Policy</p> <p>This is an enablement project created by the Center of Excellence - Enablement Team at Dynatrace.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p>"},{"location":"snippets/dt-enablement/","title":"Dt enablement","text":"<p>This codespace is powered by the Dynatrace Enablement Framework, this means that this codespace:</p> <ul> <li>can run in github codespaces, as a remote container or locally as docker container</li> <li>is crosscompiled for AMD and ARM architectures</li> <li>follows a set of standards and best practices for enhancing the user experience</li> </ul> <p>Want to learn more about it? We invite you to read this documentation</p>"},{"location":"snippets/grail-requirements/","title":"Grail requirements","text":"<p>Requirements</p> <ul> <li>A Grail enabled Dynatrace SaaS Tenant (sign up here).</li> <li>A GitHub account to interact with the demo repository.</li> </ul>"},{"location":"snippets/view-code/","title":"View code","text":"<p>View the Code</p> <p>The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.</p>"}]}