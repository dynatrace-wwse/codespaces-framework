name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  test-codespace:
    runs-on: ubuntu-22.04
    env:
      RepositoryName: "codespaces-synchronizer"
      DT_TENANT: ${{ secrets.DT_TENANT }}
      DT_OPERATOR_TOKEN: ${{ secrets.DT_OPERATOR_TOKEN }}
      DT_INGEST_TOKEN: ${{ secrets.DT_INGEST_TOKEN }}
      RepoName: "$GITHUB_REPOSITORY"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Use secret
        run: echo "Tenant ${{ secrets.DT_TENANT }} with Tokens (Operator:${{ secrets.DT_OPERATOR_TOKEN }} Ingest:${{ secrets.DT_INGEST_TOKEN }} )"
      - name: Test Codespace (devcontainer) build and run multiple commands
        env:
          RepositoryName: "codespaces-synchronizer"
          DT_TENANT: ${{ secrets.DT_TENANT }}
          DT_OPERATOR_TOKEN: ${{ secrets.DT_OPERATOR_TOKEN }}
          DT_INGEST_TOKEN: ${{ secrets.DT_INGEST_TOKEN }}
          RepoName: "$GITHUB_REPOSITORY"
        uses: devcontainers/ci@v0.3
        with:
          imageName: shinojosa/dt-enablement
          runCmd: |
            echo "------ Getting stronger... ------" ; pwd
            source .devcontainer/util/functions.sh && showOpenPorts
            echo "------ this is the path: $(pwd) ------"
            echo "------ this is the tenant ${DT_TENANT} ------" 
            echo "------ I AM ------" ; whoami
            echo "------   Docker ps.   ------- " ; docker ps
            echo "env" ; env
            echo "RepositoryName" ; echo $RepositoryName
            echo "kubectl get all -A" ; kubectl get all -A
            echo "Curling the todo app running in the Codespace container"
            docker ps --format '{{json .}}' | jq -s '.[] | select(.Image | contains("vsc")) | .Names'
            containername=$(docker ps --format '{{json .}}' | jq -s '.[] | select(.Image | contains("vsc")) | .Names')
            echo "------ containername $containername ------"
            echo "------ curl 30100 inside container ------"
            docker exec -it $containername sh -c "curl -v http://127.0.0.1:30100"
            echo "------ env inside container ------"
            docker exec -it $containername sh -c "env"
            echo "waitForAllReadyPods dynatrace" ; waitForAllReadyPods dynatrace
            echo "curling hostname"
            curl -v http://$(hostname):30100
            echo "now doing grep"
            curl -v http://localhost:30100 | grep -q "todo" && echo "TODO App Running" || echo "TODO App Not Running"
        
